.message-roll {
	.rollable {
		&.hover.fas {
			color: rgb(var(--color-link));
		}
		&.hover:not(.fas) {
			background-color: rgba(var(--color-link), 1) !important;
			color: rgba(var(--color-on-link), 1) !important;
			cursor: pointer;
		}
	}
	// font-size: var(--font-size-16);
	// .skill-text {
	// 	font-size: var(--font-size-18);
	// 	text-align: center;
	// }
	&.attack {
		display: grid;
		grid-auto-flow: row;
		align-items: center;
		text-align: center;

		> hr {
			border-color: rgb(var(--color-divider));
			height: 1px;
			width: 90%;
		}

		.name {
			font-size: var(--font-size-16);
		}
		.modifiers {
			display: grid;
			grid-auto-flow: rows;
			grid-gap: 2px;

			> [class*="mod-"] {
				margin: auto;
				border: 2px solid;
				border-radius: 4px;
				max-width: 80%;
				padding: var(--padding-standard);
				cursor: pointer;
				&.mod-pos {
					border-color: green;
					background-color: lightgreen;
					color: black;
				}
				&.mod-neg {
					border-color: red;
					background-color: pink;
					color: black;
				}
				&.mod-zero {
					border-color: yellow;
					background-color: beige;
					color: black;
				}
			}
		}
		.result {
			font-size: var(--font-size-20);
			font-weight: bold;
			// margin: 0 30px;
			margin: auto;
			width: min-content;
			padding: 0 5px;
			white-space: nowrap;
			text-align: center;
			color: white;
			border: 2px solid;
			border-color: rgb(var(--color-header));
			border-radius: 5px;

			&.critical_success {
				background-color: rgb(var(--color-critical-success));
			}
			&.critical_failure {
				background-color: rgb(var(--color-critical-failure));
			}
			&.success {
				background-color: rgb(var(--color-success));
			}
			&.failure {
				background-color: rgb(var(--color-failure));
			}
		}
		.total {
			margin-bottom: 5px;
		}
	}
}
